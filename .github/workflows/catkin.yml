name: 'Ubuntu 20 + ROS Noetic: Build'

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - {name: 'Ubuntu 20 + ROS Noetic: Build ', rosdistro: 'noetic', container: 'ros:noetic-ros-base-focal'}
    container: ${{ matrix.config.container }}
    steps:
    - uses: actions/checkout@v3
        
    - name: Install System Deps on Noetic
      if: ${{ matrix.config.container == 'ros:noetic-ros-base-focal' }}
      run: |
        apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
        apt update && apt install -y python3-wstool python3-catkin-tools git libtool

    - name: Build
      env:
        DEBIAN_FRONTEND: noninteractiv
      shell: bash
      run: |
        apt update
        mkdir -p $HOME/catkin_ws/src;
        cd $HOME/catkin_ws
        catkin init
        catkin config --extend "/opt/ros/${{matrix.config.rosdistro}}"
        catkin config --merge-devel
        catkin config --cmake-args -DCMAKE_BUILD_TYPE=RelWithDebInfo 
        cd $HOME/catkin_ws/src
        ln -s $GITHUB_WORKSPACE
        # Dependencies
        git clone https://github.com/catkin/catkin_simple.git
        git clone https://github.com/ethz-asl/glog_catkin.git
        git clone https://github.com/ethz-asl/yaml_cpp_catkin.git
        git clone https://github.com/ethz-asl/eigen_catkin.git
        catkin build catkin_simple glog_catkin yaml_cpp_catkin eigen_catkin
        
        # Build
        catkin build -j$(nproc) -l$(nproc)

    - name: Unit Tests
      shell: bash
      run: |
        cd $HOME/catkin_ws/src
        catkin config --cmake-args -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCATKIN_ENABLE_TESTING=True
        catkin build config_utilities --no-deps -i --catkin-make-args tests
        source $HOME/catkin_ws/devel/setup.bash
        status=0 && for f in $HOME/catkin_ws/devel/lib/config_utilities/test_*; do $f || exit 1; done
